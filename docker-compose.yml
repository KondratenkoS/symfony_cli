version: '3'

services:
  server:
    build:
      context: .
      dockerfile: docker/server/Dockerfile
    ports:
      - '8090:80'
    volumes:
      - ./:/var/www/app
      - ./docker/server/sites-enabled:/etc/apache2/sites-enabled
      - ./docker/server/php.ini:/usr/local/etc/php/conf.d/php.ini
    depends_on:
      - mysql
    networks:
      - internal
    working_dir: /var/www/app

  mysql:
    container_name: mysql
    image: mysql:latest
    restart: on-failure
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: api
      MYSQL_USER: mysql
      MYSQL_PASSWORD: mysql
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./data/db:/var/lib/mysql
      - ./data/log:/var/log/mysql
    networks:
      - internal

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

networks:
  internal:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.111.0/28
volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
